{
  "Create functional component": {
    "scope": "javascript,typescript,typescriptreact,javascriptreact",
    "prefix": "rnf",
    "body": [
      // Get file name and use it as the function name
      "export default function ${TM_FILENAME_BASE}$0(){",
      // return a jsx element
      "\treturn (",
      "\t\t<div>",
      "\t\t\t<h1>${TM_FILENAME_BASE}$0</h1>",
      "\t\t</div>",
      "\t);",
      "}",
      ""
    ],
  },
  "Create a typescript component with props": {
    "prefix": "rdnt",
    "body": [
      "import React from 'react'",
      "",
      "interface ${TM_FILENAME_BASE}$0Props {",
      "\t$1",
      "}",
      "",
      "const  ${TM_FILENAME_BASE}$0: React.FunctionComponent<${TM_FILENAME_BASE}$0Props> = ({ $1 }) => {",
      "\treturn (",
      "\t\t<div>",
      "\t\t\t<h1>${TM_FILENAME_BASE}$0</h1>",
      "\t\t</div>",
      "\t);",
      "}",
      "export default ${TM_FILENAME_BASE}$0",
      ""
    ]
  },
  "Create a typescript component with props and state": {
    "prefix": "rdntf",
    "body": [
      "import React from 'react'",
      "",
      "type ${TM_FILENAME_BASE}$0State = {",
      "\tdata:string",
      "}",
      "",
      "type ${TM_FILENAME_BASE}$0Props = {",
      "\tdata:string",
      "}",
      "",
      "const ${TM_FILENAME_BASE}$0: React.FunctionComponent<${TM_FILENAME_BASE}$0Props> = function ${TM_FILENAME_BASE}$0({ data }) {",
      "\tconst [state, setState] = React.useState<${TM_FILENAME_BASE}$0State>({ data })",
      "\treturn (",
      "\t\t<div>",
      "\t\t\t<h1>${TM_FILENAME_BASE}$0 - {state.data}</h1>",
      "\t\t</div>",
      "\t)",
      "}",
      "",
      "export default ${TM_FILENAME_BASE}$0",
      ""
    ]
  }
}
